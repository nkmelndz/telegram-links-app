"""
Formatter especializado para exportación PostgreSQL.
"""
import psycopg2
from ..handlers.output import ensure_directory_exists


def export_posts_to_postgresql(posts, connection_params):
    """Exporta los posts a PostgreSQL."""
    try:
        conn = psycopg2.connect(**connection_params)
        cursor = conn.cursor()
        
        # Crear tabla si no existe
        create_table_query = """
        CREATE TABLE IF NOT EXISTS telegram_posts (
            id SERIAL PRIMARY KEY,
            group_id BIGINT,
            group_name TEXT,
            message_id BIGINT,
            date TIMESTAMP,
            message TEXT,
            urls TEXT[]
        );
        """
        cursor.execute(create_table_query)
        
        # Insertar datos
        insert_query = """
        INSERT INTO telegram_posts (group_id, group_name, message_id, date, message, urls)
        VALUES (%s, %s, %s, %s, %s, %s);
        """
        
        for post in posts:
            cursor.execute(insert_query, (
                post.get('group_id'),
                post.get('group_name'),
                post.get('message_id'),
                post.get('date'),
                post.get('message'),
                post.get('urls', [])
            ))
        
        conn.commit()
        cursor.close()
        conn.close()
        
        return True
        
    except Exception as e:
        raise Exception(f"Error connecting to PostgreSQL: {str(e)}")


def format_data_for_sql(data):
    """Formatea los datos para exportación SQL."""
    if data is None:
        return None
    if isinstance(data, list):
        return data  # PostgreSQL maneja arrays nativamente
    return str(data)


def generate_sql_file(posts, export_file):
    """Genera un archivo SQL con los datos."""
    ensure_directory_exists(export_file)
    
    with open(export_file, "w", encoding="utf-8") as f:
        # Escribir header
        f.write("-- Telegram Posts Export\n")
        f.write("-- Generated by Telelinker\n\n")
        
        # Crear tabla
        f.write("""CREATE TABLE IF NOT EXISTS telegram_posts (
    id SERIAL PRIMARY KEY,
    group_id BIGINT,
    group_name TEXT,
    message_id BIGINT,
    date TIMESTAMP,
    message TEXT,
    urls TEXT[]
);

""")
        
        # Insertar datos
        for post in posts:
            urls_str = "ARRAY[" + ",".join(f"'{url}'" for url in post.get('urls', [])) + "]"
            f.write(f"""INSERT INTO telegram_posts (group_id, group_name, message_id, date, message, urls)
VALUES ({post.get('group_id', 'NULL')}, '{post.get('group_name', '').replace("'", "''")}', {post.get('message_id', 'NULL')}, '{post.get('date', '')}', '{post.get('message', '').replace("'", "''")}', {urls_str});
""")